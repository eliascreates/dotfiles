// Place your key bindings in this file to override the defaults
[
  //vim
  // Navigating to Planes
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus"
  },
  //Insert Mode Movement
  {
    "key": "alt+l",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "cursorLeft",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "cursorDown",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "cursorUp",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "cursorRight",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "\\",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && vim.mode != 'SearchInProgressMode'"
  },
  {
    "key": "alt+\\",
    "command": "workbench.view.extension.todo-tree-container",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && vim.mode != 'SearchInProgressMode'"
  },
  {
    "key": "shift+\\",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!searchViewletVisible && !findWidgetVisible && !inQuickOpen"
  },
  // Scroll Popups
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "!editorTextFocus && inQuickOpen && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "!editorTextFocus && inQuickOpen && vim.mode != 'Insert'"
  },
  //Navigate on Code Actions
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  // File
  {
    "key": "ctrl+g",
    "command": "projectManager.listGitProjects#sideBarGit"
  },
  {
    "key": "ctrl+=",
    "command": "expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+-",
    "command": "undo_expand_region",
    "when": "editorTextFocus && editorHasSelection"
  },
  // NAVIGATION
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // FILE TREE
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "shift+r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.newWindow",
    "when": "!explorerViewletFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },

  // EXTRA
  {
    "key": "ctrl+shift+5",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "ctrl+e",
    "command": "extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "ctrl+e",
    "command": "-extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+shift+u",
    "command": "workbench.view.testing.focus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  //Macro Shortcuts
  {
    "key": "r",
    "command": "macros.renameAppend",
    "when": "filesExplorerFocus && !inputFocus"
  }
]
